# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  paths:
    include:
      - 'songService/*'

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ac6da9a6-b6a9-497c-922e-128973996a2a'
  imageRepository: 'songService'
  containerRegistry: 'virtuosoregistery.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'virtuosoregistery17401561-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud'
        organization: '409046'
        scannerMode: 'CLI'
        configMode: 'file'
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: $(System.DefaultWorkingDirectory)/songService/manifests
      artifact: manifests
    
    - bash: | 
        pip install pytest
        pip install pytest-cov
        pip install pytest-xdist
        pip install pytest-bdd
      displayName: 'Install a bunch of pip packages'
    
    - bash: 'pytest --junitxml=$(Build.StagingDirectory)/test_song.xml'
      workingDirectory: $(System.DefaultWorkingDirectory)/songService/test_song.py
      displayName: 'Run test song'
    
    - task: PublishTestResults@2
      displayName: 'Publish test result /test_song.xml'
      inputs:
        testResultsFiles: '$(Build.StagingDirectory)/test_song.xml'
        testRunTitle: test_song
    
    - task: SonarCloudAnalyze@1
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'songService.ingress-basic'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)